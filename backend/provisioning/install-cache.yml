- name: Install
  hosts: cache
  tasks:
    - include_vars: /home/nate/delivr/config.yml

    - name: Add debian sid repo
      apt_repository:
        repo: "{{ item }}"
        state: present
      with_items:
        - deb http://deb.debian.org/debian/ sid main
        - deb [trusted=yes] https://apt.fury.io/caddy/ /

    - name: Set default release
      copy:
        content: APT::Default-Release "stable";
        dest: /etc/apt/apt.conf.d/default-release

    - name: Install varnish, ufw, caddy
      apt:
        update_cache: yes
        pkg:
          - varnish
          - ufw
          - caddy

    - name: Install BIRD2 from sid
      apt:
        name: bird2
        default_release: sid

    - name: Copy BIRD2 config
      template:
        src: bird.j2
        dest: /etc/bird/bird.conf
      vars:
        asn: 34553
        selected_ipv4_prefix: "{{ proxy['prefix4'] }}"
        selected_ipv6_prefix: "{{ proxy['prefix6'] }}"
        collector_ip: "{{ collector['host'] }}"
      register: bird_config

    - name: Apply BIRD config
      shell: birdc config
      when: bird_config.changed

    - name: Create network config
      copy:
        content: "{{ proxy['network_config'] }}"
        dest: /root/network.sh
        mode: +x
      register: network_config

    - name: Apply network config
      shell: /root/network.sh
      when: network_config.changed

    - name: Copy firewall config
      template:
        src: ufw.j2
        dest: /root/ufw.sh
        mode: +x
      vars:
        allowed_hosts: "{{ proxy['allowed_hosts'] }}"

    - name: Copy varnish service
      template:
        src: varnish.service.j2
        dest: /lib/systemd/system/varnish.service
      register: varnish_config

    - name: Restart varnishd
      systemd:
        daemon_reload: yes
        name: varnish
        state: restarted
      when: varnish_config.changed

    - name: Check if varnish_exporter exists
      stat:
        path: /usr/bin/varnish_exporter
      register: varnish_exporter_stat

    - name: Get varnish_exporter
      unarchive:
        src: https://github.com/jonnenauha/prometheus_varnish_exporter/releases/download/1.5.2/prometheus_varnish_exporter-1.5.2.linux-amd64.tar.gz
        dest: /tmp/
        remote_src: yes
      when: varnish_exporter_stat.stat.exists == False

    - name: Move bind_exporter to path
      command: mv /tmp/prometheus_varnish_exporter-1.5.2.linux-amd64/prometheus_varnish_exporter /usr/bin/varnish_exporter
      when: varnish_exporter_stat.stat.exists == False

    - name: Create varnish_exporter service
      copy:
        content: |
          [Unit]
          Description=Varnish Exporter
          After=network.target

          [Service]
          User=root
          Group=root
          Type=simple
          ExecStart=/usr/bin/varnish_exporter -web.listen-address="{{ ansible_host }}:9131"

          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/varnish-exporter.service
      when: varnish_exporter_stat.stat.exists == False

    - name: Enable and start varnish_exporter
      systemd:
        name: varnish-exporter
        enabled: yes
        state: restarted
      when: varnish_exporter_stat.stat.exists == False
